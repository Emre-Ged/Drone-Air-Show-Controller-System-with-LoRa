[General]
network = DroneNetwork
**.maxTransmissionDuration = 4s
**.energyDetection = -110dBm
**.updateInterval = 1s
**.radio.radioMediumModule = "LoRaMedium"

**.displayEventlogMessages = true
*.**.verbose = true

**.gw[*].numUdpApps                   = 1
**.gw[0].udpApp[0].localPort          = 2000
**.gw[0].udpApp[0].destPort           = 1000
**.gw[0].udpApp[0].destAddresses      = "networkServer"

**.networkServer.numApps              = 1
**.networkServer.app[0].typename      = "NetworkServerApp"
**.networkServer.app[0].localPort     = 1000
**.networkServer.app[0].destPort      = 2000
**.networkServer.app[0].destAddresses = "gw[0]"

#cmdenv-autoflush = true
#cmdenv-status-frequency = 10000000s
#cmdenv-express-mode = false
#cmdenv-output-file = cmd_env_log.txt
**.vector-recording = true

rng-class = "cMersenneTwister"
**.loRaGW[*].numUdpApps = 1
**.loRaGW[0].packetForwarder.localPort = 2000
**.loRaGW[0].packetForwarder.destPort = 1000
**.loRaGW[0].packetForwarder.destAddresses = "networkServer"
**.loRaGW[0].packetForwarder.indexNumber = 0


**.networkServer.**.evaluateADRinServer = true

**.networkServer.app[0].adrMethod = ${"avg"}

**.numberOfPacketsToSend = 0 #${numberOfPAckets = 200..5000 step 200} #100 #obviously 0 means infinite number of packets
sim-time-limit = 1d
simtime-resolution = -11
repeat = 30

**.timeToFirstPacket = uniform(0s,1s)
**.timeToNextPacket = exponential(1s)
**.alohaChannelModel = false

#nodes features
**.numberOfNodes = 10
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 600m
**.constraintAreaMaxZ = 0m

# LoRaGW sends data to Drone1
*.loRaGW[0].numApps = 1
*.loRaGW[0].app[0].typename = "SimpleLoRaApp"
*.loRaGW[0].app[0].destAddresses = "Drone1"
*.loRaGW[0].app[0].destPort = 4000
*.loRaGW[0].app[0].messageLength = 100B
*.loRaGW[0].app[0].sendInterval = exponential(1s)

# Drone1 sends data to LoRaGW
**.Drone[*].numApps = 1
**.Drone[*].app[0].typename = "SimpleLoRaApp"
**.Drone[*].app[0].destAddresses = "loRaGW[0]"
**.Drone[*].app[0].destPort = 4000
**.Drone[*].app[0].messageLength = 100B
**.Drone[*].app[0].timeToFirstPacket = uniform(0s,1s)
**.Drone[*].app[0].timeToNextPacket = exponential(1s)

**.Drone[*].LoRaNic.radio.typename = "LoraRadio"
**.Drone[*].mac.typename = "LoraMac"
**.Drone[*].mobility.typename = "TurtleMobility"
**.Drone[*].mobility.turtleScript = xmldoc("turtle1.xml", "movements//movement[@id='1']")


**.Drone1.**.initialX = 200m
**.Drone1.**.initialY = 200m
**.Drone1.**initialLoRaSF = 12
**.Drone1.**initialLoRaTP = 14dBm
**.Drone1.**initialLoRaBW = 125 kHz
**.Drone1.**initialLoRaCR = 4
**.Drone1.**.initFromDisplayString = false
**.Drone1.**.evaluateADRinNode = true


**.Drone2.**.initialX = 200m
**.Drone2.**.initialY = 200m
**.Drone2.**initialLoRaSF = 12
**.Drone2.**initialLoRaTP = 14dBm
**.Drone2.**initialLoRaBW = 125 kHz
**.Drone2.**initialLoRaCR = 4
**.Drone2.**.initFromDisplayString = false
**.Drone2.**.evaluateADRinNode = true

**.Drone3.**.initialX = 200m
**.Drone3.**.initialY = 200m
**.Drone3.**initialLoRaSF = 12
**.Drone3.**initialLoRaTP = 14dBm
**.Drone3.**initialLoRaBW = 125 kHz
**.Drone3.**initialLoRaCR = 4
**.Drone3.**.initFromDisplayString = false
**.Drone3.**.evaluateADRinNode = true

**.Drone4.**.initialX = 200m
**.Drone4.**.initialY = 200m
**.Drone4.**initialLoRaSF = 12
**.Drone4.**initialLoRaTP = 14dBm
**.Drone4.**initialLoRaBW = 125 kHz
**.Drone4.**initialLoRaCR = 4
**.Drone4.**.initFromDisplayString = false
**.Drone4.**.evaluateADRinNode = true

**.Drone5.**.initialX = 200m
**.Drone5.**.initialY = 200m
**.Drone5.**initialLoRaSF = 12
**.Drone5.**initialLoRaTP = 14dBm
**.Drone5.**initialLoRaBW = 125 kHz
**.Drone5.**initialLoRaCR = 4
**.Drone5.**.initFromDisplayString = false
**.Drone5.**.evaluateADRinNode = true

**.Drone6.**.initialX = 200m
**.Drone6.**.initialY = 200m
**.Drone6.**initialLoRaSF = 12
**.Drone6.**initialLoRaTP = 14dBm
**.Drone6.**initialLoRaBW = 125 kHz
**.Drone6.**initialLoRaCR = 4
**.Drone6.**.initFromDisplayString = false
**.Drone6.**.evaluateADRinNode = true

**.Drone7.**.initialX = 200m
**.Drone7.**.initialY = 200m
**.Drone7.**initialLoRaSF = 12
**.Drone7.**initialLoRaTP = 14dBm
**.Drone7.**initialLoRaBW = 125 kHz
**.Drone7.**initialLoRaCR = 4
**.Drone7.**.initFromDisplayString = false
**.Drone7.**.evaluateADRinNode = true

**.Drone8.**.initialX = 200m
**.Drone8.**.initialY = 200m
**.Drone8.**initialLoRaSF = 12
**.Drone8.**initialLoRaTP = 14dBm
**.Drone8.**initialLoRaBW = 125 kHz
**.Drone8.**initialLoRaCR = 4
**.Drone8.**.initFromDisplayString = false
**.Drone8.**.evaluateADRinNode = true

**.Drone9.**.initialX = 200m
**.Drone9.**.initialY = 200m
**.Drone9.**initialLoRaSF = 12
**.Drone9.**initialLoRaTP = 14dBm
**.Drone9.**initialLoRaBW = 125 kHz
**.Drone9.**initialLoRaCR = 4
**.Drone9.**.initFromDisplayString = false
**.Drone9.**.evaluateADRinNode = true

**.Drone10.**.initialX = 200m
**.Drone10.**.initialY = 200m
**.Drone10.**initialLoRaSF = 12
**.Drone10.**initialLoRaTP = 14dBm
**.Drone10.**initialLoRaBW = 125 kHz
**.Drone10.**initialLoRaCR = 4
**.Drone10.**.initFromDisplayString = false
**.Drone10.**.evaluateADRinNode = true

#gateway features
**.numberOfGateways = 1
**.loRaGW[0].**.initialX = 250.00m
**.loRaGW[0].**.initialY = 220.00m
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false

#power consumption features
**.Drone[*].LoRaNic.radio.energyConsumer.typename = "LoRaEnergyConsumer"
**.Drone[*].**.energySourceModule = "^.IdealEpEnergyStorage"
**.Drone[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

#general features
**.sigma = 3.57


LoRaNetworkTest.**.radio.separateTransmissionParts = false
LoRaNetworkTest.**.radio.separateReceptionParts = false


**.ipv4Delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false

# cache features
**.LoRaMedium.mediumLimitCacheType = "LoRaMediumCache"
**.LoRaMedium.rangeFilter = "communicationRange"
**.LoRaMedium.neighborCacheType = "LoRaNeighborCache"
**.LoRaMedium.neighborCache.range = 546m
**.LoRaMedium.neighborCache.refillPeriod = 3000s